# File: /order-service/.ebextensions/https-instance.config

# This file tells Elastic Beanstalk how to set up HTTPS on the server itself.

option_settings:
  # This tells the server's firewall (security group) to allow incoming traffic on port 443 (the standard HTTPS port).
  aws:ec2:vpc:
    ELBScheme: public
  aws:elasticbeanstalk:environment:process:default:
    HealthCheckPath: /
    Port: '8080'
    Protocol: HTTP
  aws:elasticbeanstalk:application:environment:
    # Set a variable to tell our scripts which port to use for HTTPS
    HTTPS_PORT: '443'

Resources:
  # This section configures the server's firewall rules.
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBInstanceSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

# This section contains commands that will be run on the server during deployment.
files:
  # 1. Create a script that will renew the SSL certificate automatically.
  /etc/cron.d/certbot_renew:
    mode: "000644"
    owner: root
    group: root
    content: |
      0 0,12 * * * root /opt/certbot/bin/certbot renew -q

  # 2. Create the main script to install the certificate.
  /tmp/install_cert.sh:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # This script installs Certbot (a free SSL certificate provider) and configures Nginx.
      
      # Install required tools
      sudo yum install -y certbot python2-certbot-nginx
      
      # Get the server's public domain name
      DOMAIN=$(/opt/elasticbeanstalk/bin/get-config environment -k EB_ELASTIC_IP)
      if [ -z "$DOMAIN" ]; then
        DOMAIN=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
      fi
      
      # Stop Nginx temporarily
      sudo systemctl stop nginx
      
      # Request a new SSL certificate from Let's Encrypt
      sudo /opt/certbot/bin/certbot certonly --standalone -d $DOMAIN --email yoyotripathi12@gmail.com --agree-tos --no-eff-email -n
      
      # Create the Nginx configuration for HTTPS
      cat <<EOF > /etc/nginx/conf.d/https.conf
      server {
          listen 443 ssl;
          server_name $DOMAIN;

          ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;

          location / {
              proxy_pass http://127.0.0.1:8080;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
          }
      }
      EOF
      
      # Start Nginx again
      sudo systemctl start nginx

commands:
  # This command runs the script we just created.
  01_install_cert:
    command: "/tmp/install_cert.sh"
